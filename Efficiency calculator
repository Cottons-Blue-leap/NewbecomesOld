# 과금한 효율을 구하는 함수를 정의
# 평균 효율을 구하고 그 효율보다 높으면 '효율이 좋다'
# 평균 효율보다 낮으면 '효율이 나쁘다' 출력
# 쓴 돈으로 얻을 수 있는 최대 효율과 평균 효율, 최저 효율을 구해 비교한다.

# 1스타당 효율 구하는 함수



Bang = {'햎박': '3000/11000', '세트': '1960/22000', '스타A': '60/1100', '스타B': '360/4500', '스타C': '760/9000', '스타D': '1300/15000', '스타E': '2650/30500', '스타F': '4200/47500', '스타G': '8500/95000'}
keys_lst = list(Bang.keys()) # 딕셔너리의 키를 리스트로 생성
values_lst = list(Bang.values()) # 딕셔너리의 값들을 리스트로 생성
l = len(values_lst)
num_stars = []
num_money = []
for i in range(0, l): # 딕셔너리의 값 중 star와 money를 분리하여 각 리스트 생성
    value = values_lst[i]
    value_lst = value.split('/')
    num_stars.append(int(value_lst[0]))
    num_money.append(int(value_lst[1]))        

money_per_star = []
for i in range(l):
    m = num_money[i]/num_stars[i]
    money_per_star.append(m)
    money_per_star.sort()
    
effi_max = round(money_per_star[-1], 3)
effi_min = round(money_per_star[0], 3)
effi_avg = round(sum(money_per_star)/len(money_per_star), 3)

def effi_Calculator():
    star = int(input('스타는 얼마나 얻었나요? : '))
    money = int(input('돈은 얼마나 잃었나요? : '))
    effi = money / star
    print(f'당신은 1스타당 {effi}원을 썼습니다.', end = '\n')
    
print(f'최대효율 : 1스타당 {effi_max}원 \n 최저효율 : 1스타당 {effi_min}원 \n 효율평균 : 1스타당 {effi_avg}원')
          
effi_Calculator()
